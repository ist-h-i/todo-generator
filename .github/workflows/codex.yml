name: Codex Auto Dev

on:
  workflow_dispatch:   # 手動実行
    inputs:
      task_input:
        description: Codex パイプラインへ渡すタスク内容（省略時はデフォルト文言）
        required: false
  issues:              # Issue起票（新規作成時）
    types: [opened]
  issue_comment:       # Issueコメントでトリガー
    types: [created]

jobs:
  codex:
    if: >-
      github.event_name == 'workflow_dispatch' ||
      ((github.event_name == 'issues' || github.event_name == 'issue_comment') &&
       (contains(fromJSON('["OWNER","MEMBER","COLLABORATOR"]'), github.event.issue.author_association) ||
        (github.event_name == 'issue_comment' &&
         contains(fromJSON('["OWNER","MEMBER","COLLABORATOR"]'), github.event.comment.author_association))))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check OPENAI_API_KEY availability
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "::error::OPENAI_API_KEY is not available for this workflow run. Maintainers: please re-run via \"Run workflow\" in the Actions tab so repository secrets are accessible."
            exit 1
          fi

      - name: Install Codex CLI
        run: npm install -g @openai/codex

      - name: Run Codex translator → requirements analyst → detail designer → planner pipeline
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail

          # イベント種別で入力を切り替え。Codex パイプラインには生のテキストのみを渡す。
          case "${{ github.event_name }}" in
            issues)
              RAW_TASK_INPUT="${{ github.event.issue.title }}: ${{ github.event.issue.body }}"
              ;;
            issue_comment)
              RAW_TASK_INPUT="Comment on issue #${{ github.event.issue.number }}: ${{ github.event.comment.body }}"
              ;;
            *)
              RAW_TASK_INPUT="${{ github.event.inputs.task_input }}"
              if [ -z "$RAW_TASK_INPUT" ]; then
                RAW_TASK_INPUT="Manual trigger: Please implement the requested feature."
              fi
              ;;
          esac

          echo "TASK_INPUT: $RAW_TASK_INPUT"
          mkdir -p codex_output
          if ! command -v codex >/dev/null 2>&1; then
            echo "Codex CLI not installed correctly" >&2
            exit 1
          fi

          # Pipe the dynamically composed task description into the Codex helper
          # script. Using stdin avoids the deprecated "--task" flag that the
          # legacy CLI accepted and keeps us compatible with the latest
          # releases.
          printf '%s' "$RAW_TASK_INPUT" | ./scripts/run_codex_pipeline.sh

      - name: Upload Codex outputs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: codex-agent-outputs
          path: codex_output
