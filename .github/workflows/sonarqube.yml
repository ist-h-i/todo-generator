name: SonarQube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Verify SonarQube secrets
        if: env.SONAR_HOST_URL == '' || env.SONAR_TOKEN == ''
        run: |
          echo "SONAR_HOST_URL and/or SONAR_TOKEN are not configured."
          echo "Skipping SonarQube analysis."

      - name: SonarQube Scan
        if: env.SONAR_HOST_URL != '' && env.SONAR_TOKEN != ''
        uses: SonarSource/sonarqube-scan-action@v2

      - name: SonarQube Quality Gate
        if: env.SONAR_HOST_URL != '' && env.SONAR_TOKEN != ''
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
