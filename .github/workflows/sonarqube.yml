name: SonarQube

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'package*.json'
      - 'requirements*.txt'
      - '.github/workflows/sonarqube.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'package*.json'
      - 'requirements*.txt'
      - '.github/workflows/sonarqube.yml'
  schedule:
    - cron: '0 18 * * *' # daily

concurrency:
  group: sonarqube-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
      pull-requests: read
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Abort if secrets missing
        if: ${{ env.SONAR_HOST_URL == '' || env.SONAR_TOKEN == '' || env.SONAR_ORGANIZATION == '' }}
        run: |
          echo "SONAR_HOST_URL, SONAR_TOKEN, or SONAR_ORGANIZATION not set. Skipping SonarQube."
          exit 0

      - name: Set up Node.js (with cache)
        if: ${{ hashFiles('package-lock.json','frontend/package-lock.json','npm-shrinkwrap.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            frontend/package-lock.json
      
      - name: Set up Node.js (no cache)
        if: ${{ hashFiles('package-lock.json','frontend/package-lock.json','npm-shrinkwrap.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        if: ${{ hashFiles('frontend/package.json') != '' }}
        working-directory: frontend
        run: npm ci

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            backend/requirements.txt

      - name: Install backend dependencies
        if: ${{ hashFiles('backend/requirements.txt') != '' || hashFiles('requirements.txt') != '' }}
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements.txt ]; then
            pip install -r backend/requirements.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: SonarQube Scan
        if: ${{ env.SONAR_HOST_URL != '' && env.SONAR_TOKEN != '' && env.SONAR_ORGANIZATION != '' }}
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        with:
          args: >-
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}

      - name: SonarQube Quality Gate
        if: ${{ env.SONAR_HOST_URL != '' && env.SONAR_TOKEN != '' && env.SONAR_ORGANIZATION != '' }}
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
