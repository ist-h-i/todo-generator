{
  "steps": [
    "coder",
    "code_quality_reviewer"
  ],
  "source": "planner",
  "planner_payload": {
    "steps": [
      "coder",
      "code_quality_reviewer"
    ],
    "notes": "Coder adds Channel + ChannelMember, cards.channel_id, membership-scoped queries, default channel on card create, and invite/leave/kick endpoints; blocks channel_id changes. Integrator wires startup migrations to create private channels per user and backfill cards, registers routers, and verifies endpoints. Frontend selector deferred to keep scope minimal.",
    "tests": "Backend: (1) GET /channels/mine returns private channel after registration. (2) POST /cards without channel_id creates in private channel; response includes channel_id. (3) POST /cards with non-member channel → 403. (4) List cards only returns member-channel cards. (5) Attempt to update card with channel_id → 409. (6) Invite user → invitee can list/create in channel. (7) Leave removes membership; access revoked. (8) Kick by owner removes member; access revoked. Migration: existing users have private channels; existing cards have non-null channel_id pointing to creator’s channel."
  }
}